apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "monitoring.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: {{ .Values.replicaCount.prometheus }}
  selector:
    matchLabels:
      {{- include "monitoring.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "monitoring.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      containers:
      - name: prometheus
        image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
        ports:
        - containerPort: 9090
          name: http
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time={{ .Values.prometheus.retention }}'
        - '--web.enable-lifecycle'
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 12 }}
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ include "monitoring.fullname" . }}-prometheus-config
      - name: prometheus-storage
        emptyDir: {}
