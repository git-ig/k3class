apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "monitoring.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: {{ .Values.replicaCount.grafana }}
  selector:
    matchLabels:
      {{- include "monitoring.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "monitoring.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "monitoring.fullname" . }}-secret
              key: grafana-admin-password
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        resources:
          {{- toYaml .Values.grafana.resources | nindent 12 }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        emptyDir: {}
