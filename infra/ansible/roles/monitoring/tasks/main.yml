---
- name: Create monitoring directory structure
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/monitoring/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - config
    - data/prometheus
    - data/grafana

- name: Create Prometheus configuration
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "/home/{{ ansible_user }}/monitoring/config/prometheus.yml"
    mode: "0644"
  notify: Restart prometheus

- name: Create Grafana provisioning directories
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/monitoring/config/grafana/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - provisioning/datasources
    - provisioning/dashboards

- name: Create Grafana datasource configuration
  ansible.builtin.template:
    src: grafana-datasources.yml.j2
    dest: "/home/{{ ansible_user }}/monitoring/config/grafana/provisioning/datasources/prometheus.yml"
    mode: "0644"

- name: Stop existing monitoring containers
  community.docker.docker_container:
    name: "{{ item }}"
    state: absent
  loop:
    - prometheus
    - grafana
    - node-exporter
    - cadvisor
  become: true
  failed_when: false

- name: Create monitoring network
  community.docker.docker_network:
    name: monitoring
  become: true

- name: Run Node Exporter
  community.docker.docker_container:
    name: node-exporter
    image: prom/node-exporter:v1.6.1
    state: started
    restart_policy: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - name: monitoring
  become: true

- name: Run cAdvisor for Docker monitoring
  community.docker.docker_container:
    name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    state: started
    restart_policy: always
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - name: monitoring
  become: true

- name: Run Prometheus container
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:v2.47.0
    state: started
    restart_policy: always
    ports:
      - "9090:9090"
    volumes:
      - "/home/{{ ansible_user }}/monitoring/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "/home/{{ ansible_user }}/monitoring/data/prometheus:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"
    user: "{{ ansible_user_uid }}:{{ ansible_user_gid }}"
    networks:
      - name: monitoring
  become: true

- name: Run Grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana:10.2.0
    state: started
    restart_policy: always
    ports:
      - "3000:3000"
    env:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: "{{ vault_grafana_admin_password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - "/home/{{ ansible_user }}/monitoring/data/grafana:/var/lib/grafana"
      - "/home/{{ ansible_user }}/monitoring/config/grafana/provisioning:/etc/grafana/provisioning"
    user: "{{ ansible_user_uid }}:{{ ansible_user_gid }}"
    networks:
      - name: monitoring
  become: true

- name: Set correct ownership for monitoring data
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/monitoring/data"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: true
  become: true

- name: Wait for Prometheus to be ready
  ansible.builtin.wait_for:
    port: 9090
    host: localhost
    delay: 10
    timeout: 60

- name: Wait for Grafana to be ready
  ansible.builtin.wait_for:
    port: 3000
    host: localhost
    delay: 15
    timeout: 60
