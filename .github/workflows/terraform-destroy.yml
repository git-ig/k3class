name: Terraform Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm infrastructure destruction'
        required: true
        default: ""
      environment:
        description: "Environment to destroy (production/staging)"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  terraform-destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate destroy confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "destroy" ]; then
            echo "❌ Destruction not confirmed. You must type 'destroy' to proceed."
            exit 1
          fi
          echo "✅ Destruction confirmed"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Create Terraform backend config
        env:
          GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
        working-directory: infra/terraform/gcp
        run: |
          echo "bucket = \"$GCS_BUCKET_NAME\"" > backend.conf
          echo "prefix = \"terraform/state\"" >> backend.conf

      - name: Create tfvars
        env:
          SSH_PUBLIC_KEY: ${{ secrets.GCP_SSH_PUBLIC_KEY }}
        working-directory: infra/terraform/gcp
        run: |
          cat > terraform.tfvars << EOF
          project_id               = "${{ secrets.GCP_PROJECT_ID }}"
          region                   = "${{ secrets.GCP_REGION }}"
          zone                     = "${{ secrets.GCP_ZONE }}"
          ssh_user                 = "${{ secrets.GCP_SSH_USER }}"
          ssh_public_key_content   = "$SSH_PUBLIC_KEY"
          bucket_name              = "${{ secrets.GCS_BUCKET_NAME }}"
          service_account_email    = "${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}"
          cloudflare_api_token     = "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          cloudflare_zone_id       = "${{ secrets.CLOUDFLARE_ZONE_ID }}"
          EOF

      - name: Initialize Terraform
        working-directory: infra/terraform/gcp
        run: terraform init -backend-config=backend.conf

      - name: Terraform Plan Destroy
        working-directory: infra/terraform/gcp
        run: |
          echo "🔍 Planning destruction..."
          terraform plan -destroy -var-file="terraform.tfvars"

      - name: Terraform Destroy
        working-directory: infra/terraform/gcp
        run: |
          echo "💥 Destroying infrastructure..."
          terraform destroy -auto-approve -var-file="terraform.tfvars"

      - name: Cleanup confirmation
        run: |
          echo "🎉 Infrastructure destroyed successfully!"
          echo "All GCP resources and Cloudflare DNS records have been removed."
